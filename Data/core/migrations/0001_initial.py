# Generated by Django 3.0.5 on 2021-10-21 04:34

import Utils.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='fecha edición')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe otra cuenta asociada a este correo electrónico.'}, max_length=254, null=True, unique=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('is_staff', models.BooleanField(help_text='Al ser Staff se permite acceso al administrador.', null=True, verbose_name='staff status')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='active')),
                ('is_verified', models.BooleanField(blank=True, null=True, verbose_name='verificado')),
                ('date_verified', models.DateTimeField(blank=True, null=True, verbose_name='fecha de verificacion')),
                ('is_superuser', models.BooleanField(help_text='Un usuario Superusuario tiene privilegios totales sobre el sitio.', null=True, verbose_name='superusuario')),
                ('first_login', models.BooleanField(blank=True, null=True, verbose_name='¿Primer ingreso?')),
                ('reset_password', models.BooleanField(blank=True, null=True, verbose_name='cambiar contraseña')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='clave de sesión')),
                ('success_login_counter', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='cant. de accesos')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='ultima actividad')),
                ('fail_login_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='cant. de intentos de acceso')),
                ('last_pass_change', models.DateTimeField(blank=True, null=True, verbose_name='ultimo cambio de password')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_created', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_updated', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', Utils.managers.UserEmailManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha registro')),
                ('updated_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='fecha edición')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'Ya existe otra cuenta asociada a este correo electrónico.'}, max_length=254, null=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('is_staff', models.BooleanField(help_text='Al ser Staff se permite acceso al administrador.', null=True, verbose_name='staff status')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='active')),
                ('is_verified', models.BooleanField(blank=True, null=True, verbose_name='verificado')),
                ('date_verified', models.DateTimeField(blank=True, null=True, verbose_name='fecha de verificacion')),
                ('is_superuser', models.BooleanField(help_text='Un usuario Superusuario tiene privilegios totales sobre el sitio.', null=True, verbose_name='superusuario')),
                ('first_login', models.BooleanField(blank=True, null=True, verbose_name='¿Primer ingreso?')),
                ('reset_password', models.BooleanField(blank=True, null=True, verbose_name='cambiar contraseña')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='clave de sesión')),
                ('success_login_counter', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='cant. de accesos')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='ultima actividad')),
                ('fail_login_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='cant. de intentos de acceso')),
                ('last_pass_change', models.DateTimeField(blank=True, null=True, verbose_name='ultimo cambio de password')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='editado por')),
            ],
            options={
                'verbose_name': 'historical user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
